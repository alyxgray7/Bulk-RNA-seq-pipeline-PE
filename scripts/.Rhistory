# rownames(annoMD) <- samples
}
}
class(annoMD)
### Sample-sample correlations
# get metadata columns for heatmap ***** DEBUG ON EXACLOUD *****
annoMD <- md
samples
# )
#rownames(md) <- samples
#md <- md[, -1]
#colnames(md) <- cols2keep
## Trial 5
# annoMD <- as.data.table(annoMD)
# annoMD <- annoMD[, cols2keep, with = FALSE]
# annoMD <- as.data.frame(annoMD)
# rownames(annoMD) <- samples
## Trial 6
annoMD <- as.list(annoMD[, colnames(annoMD) %in% cols2keep])
annoMD
### Sample-sample correlations
# get metadata columns for heatmap ***** DEBUG ON EXACLOUD *****
annoMD <- md
# )
#rownames(md) <- samples
#md <- md[, -1]
#colnames(md) <- cols2keep
## Trial 5
# annoMD <- as.data.table(annoMD)
# annoMD <- annoMD[, cols2keep, with = FALSE]
# annoMD <- as.data.frame(annoMD)
# rownames(annoMD) <- samples
## Trial 6
annoMD <- data.frame(as.list(annoMD[, colnames(annoMD) %in% cols2keep]))
annoMD
if (length(cols2keep == 1))
### Sample-sample correlations
# get metadata columns for heatmap ***** DEBUG ON EXACLOUD *****
annoMD <- md
annoMD
annoMD <- annoMD[, colnames(annoMD) %in% cols2keep]
annoMD
### Sample-sample correlations
# get metadata columns for heatmap ***** DEBUG ON EXACLOUD *****
annoMD <- md
annoMD <- as.data.frame(annoMD[, colnames(annoMD) %in% cols2keep])
annoMD
### Sample-sample correlations
# get metadata columns for heatmap ***** DEBUG ON EXACLOUD *****
annoMD <- md
annoMD <- as.data.frame(annoMD[, colnames(annoMD) %in% cols2keep])
colnames(annoMD) <- cols2keep
rownames(annoMD) <- sampples
rownames(annoMD) <- samples
annoMD
annoMD <- md
#plot_cols <- snakemake@config[['meta_columns_to_plot']]
#plot_cols <- c("RINum", "RINcat", "StudyID")
#plot_cols <- c("Alias")
plot_cols <- c()
samples <- annoMD[,1]
cols2keep <- c(io$contrast, plot_cols)
# Check dimensions needed for formatting
if (length(cols2keep >= 2)) {
print("plotting 2+ sample annotations")
annoMD <- annoMD[, colnames(annoMD) %in% cols2keep]
annoMD <- annoMD[order(annoMD[, io$contrast], rownames(annoMD)), ]
ord <- rownames(annoMD)
}
if (length(cols2keep == 1)) {
print("plotting 1 sample annotation")
annoMD <- as.data.frame(annoMD[, colnames(annoMD) %in% cols2keep])
colnames(annoMD) <- cols2keep
rownames(annoMD) <- samples
}
typeof(annoMD)
### Sample-sample correlations
# get metadata columns for heatmap ***** DEBUG ON EXACLOUD *****
annoMD <- md
as.matrix(annoMD)
test <- annoMD[, colnames(annoMD) %in% cols2keep]
test
test <- as.data.frame(test, row.names = samples)
test
colnames(test) <- cols2keep
test
### Sample-sample correlations
# get metadata columns for heatmap ***** DEBUG ON EXACLOUD *****
annoMD <- md
if (length(cols2keep == 1)) {
print("plotting 1 sample annotation")
test <- annoMD[, colnames(annoMD) %in% cols2keep]
test <- as.data.frame(test, row.names = samples)
colnames(test) <- cols2keep
# annoMD <- as.data.frame(annoMD[, colnames(annoMD) %in% cols2keep])
# colnames(annoMD) <- cols2keep
# rownames(annoMD) <- samples
# ## Trial 7000
# annoMD <- as.matrix(annoMD)
}
test
annoMD <- md
#plot_cols <- snakemake@config[['meta_columns_to_plot']]
#plot_cols <- c("RINum", "RINcat", "StudyID")
#plot_cols <- c("Alias")
plot_cols <- c()
samples <- annoMD[,1]
cols2keep <- c(io$contrast, plot_cols)
# Check dimensions needed for formatting
if (length(cols2keep >= 2)) {
print("plotting 2+ sample annotations")
annoMD <- annoMD[, colnames(annoMD) %in% cols2keep]
annoMD <- annoMD[order(annoMD[, io$contrast], rownames(annoMD)), ]
ord <- rownames(annoMD)
} else {
print("plotting 1 sample annotation")
test <- annoMD[, colnames(annoMD) %in% cols2keep]
test <- as.data.frame(test, row.names = samples)
colnames(test) <- cols2keep
}
length(cols2keep)
annoMD <- md
#plot_cols <- snakemake@config[['meta_columns_to_plot']]
#plot_cols <- c("RINum", "RINcat", "StudyID")
#plot_cols <- c("Alias")
plot_cols <- c()
samples <- annoMD[,1]
cols2keep <- c(io$contrast, plot_cols)
# Check dimensions needed for formatting
if (length(cols2keep) >= 2) {
print("plotting 2+ sample annotations")
annoMD <- annoMD[, colnames(annoMD) %in% cols2keep]
annoMD <- annoMD[order(annoMD[, io$contrast], rownames(annoMD)), ]
ord <- rownames(annoMD)
} else {
print("plotting 1 sample annotation")
test <- annoMD[, colnames(annoMD) %in% cols2keep]
test <- as.data.frame(test, row.names = samples)
colnames(test) <- cols2keep
}
annoMD
test
annoMD <- md
#plot_cols <- snakemake@config[['meta_columns_to_plot']]
#plot_cols <- c("RINum", "RINcat", "StudyID")
#plot_cols <- c("Alias")
plot_cols <- c()
samples <- annoMD[,1]
cols2keep <- c(io$contrast, plot_cols)
# Check dimensions needed for formatting
if (length(cols2keep) >= 2) {
print("plotting 2+ sample annotations")
annoMD <- annoMD[, colnames(annoMD) %in% cols2keep]
annoMD <- annoMD[order(annoMD[, io$contrast], rownames(annoMD)), ]
ord <- rownames(annoMD)
} else {
print("plotting 1 sample annotation")
annoMD <- annoMD[, colnames(annoMD) %in% cols2keep]
annoMD <- as.data.frame(annoMD, row.names = samples)
colnames(annoMD) <- cols2keep
}
annoMD
nnoMD <- md
#plot_cols <- snakemake@config[['meta_columns_to_plot']]
#plot_cols <- c("RINum", "RINcat", "StudyID")
plot_cols <- c("Alias")
#plot_cols <- c()
samples <- annoMD[,1]
cols2keep <- c(io$contrast, plot_cols)
# Check dimensions needed for formatting
if (length(cols2keep) >= 2) {
print("plotting 2+ sample annotations")
annoMD <- annoMD[, colnames(annoMD) %in% cols2keep]
annoMD <- annoMD[order(annoMD[, io$contrast], rownames(annoMD)), ]
ord <- rownames(annoMD)
} else {
print("plotting 1 sample annotation")
annoMD <- annoMD[, colnames(annoMD) %in% cols2keep]
annoMD <- as.data.frame(annoMD, row.names = samples)
colnames(annoMD) <- cols2keep
}
annoMD <- md
#plot_cols <- snakemake@config[['meta_columns_to_plot']]
#plot_cols <- c("RINum", "RINcat", "StudyID")
plot_cols <- c("Alias")
#plot_cols <- c()
samples <- annoMD[,1]
cols2keep <- c(io$contrast, plot_cols)
# Check dimensions needed for formatting
if (length(cols2keep) >= 2) {
print("plotting 2+ sample annotations")
annoMD <- annoMD[, colnames(annoMD) %in% cols2keep]
annoMD <- annoMD[order(annoMD[, io$contrast], rownames(annoMD)), ]
ord <- rownames(annoMD)
} else {
print("plotting 1 sample annotation")
annoMD <- annoMD[, colnames(annoMD) %in% cols2keep]
annoMD <- as.data.frame(annoMD, row.names = samples)
colnames(annoMD) <- cols2keep
}
annoMD
annoMD <- md
#plot_cols <- snakemake@config[['meta_columns_to_plot']]
#plot_cols <- c("RINum", "RINcat", "StudyID")
#plot_cols <- c("Alias")
plot_cols <- c()
samples <- annoMD[,1]
cols2keep <- c(io$contrast, plot_cols)
# Check dimensions needed for formatting
if (length(cols2keep) >= 2) {
print("plotting 2+ sample annotations")
annoMD <- annoMD[, colnames(annoMD) %in% cols2keep]
annoMD <- annoMD[order(annoMD[, io$contrast], rownames(annoMD)), ]
ord <- rownames(annoMD)
} else {
print("plotting 1 sample annotation")
annoMD <- annoMD[, colnames(annoMD) %in% cols2keep]
annoMD <- as.data.frame(annoMD, row.names = samples)
colnames(annoMD) <- cols2keep
}
annoMD
type
# Run correlation test and save output
cor.res <- rcorr(as.matrix(raw), type = type)
corrplot(cor.res$r, method = "color", addCoef.col = "darkgrey",
title = paste("Unordered correlation plot of samples", io$corType, sep = ": "),
outline = TRUE, number.cex = 1.25,
tl.cex = 1.5, cl.cex = 1.25, mar=c(0,0,2,0))
corrplot(cor.res$r, method = "square", order = "hclust",
title = paste("Hierarchical clustering correlation plot of samples", io$corType, sep = ": "),
number.cex = 1.25, outline = TRUE,
tl.cex = 1.5, cl.cex = 1.25, mar=c(0,0,2,0))
pheatmap(cor.res$r,
main = paste("Clustered sample correlation heatmap", io$corType, sep = ": "),
cluster_rows = TRUE, cluster_cols = TRUE, clustering_method = "ward.D",
annotation_col = annoMD, annotation_row = annoMD,
fontsize = 12, fontsize_row = 10, fontsize_col = 10, show_rownames = TRUE,
labels_row = as.character(rownames(cor.res$r)),
labels_col = as.character(colnames(cor.res$r)),
color = colorRampPalette(c("navy", "white", "red"))(50)
)
## Pearson correlation
cor.res <- rcorr(as.matrix(raw), type = "pearson")
corrplot(cor.res$r, method = "color", addCoef.col = "darkgrey",
title = paste("Unordered correlation plot", "Pearson", sep = ": "),
outline = TRUE, number.cex = 1.25,
tl.cex = 1.5, cl.cex = 1.25, mar=c(0,0,2,0))
corrplot(cor.res$r, method = "square", order = "hclust",
title = paste("Hierarchical clustered correlation plot", "Pearson", sep = ": "),
number.cex = 1.25, outline = TRUE,
tl.cex = 1.5, cl.cex = 1.25, mar=c(0,0,2,0))
pheatmap(cor.res$r,
main = paste("Clustered sample correlation heatmap", "Pearson", sep = ": "),
cluster_rows = TRUE, cluster_cols = TRUE, clustering_method = "ward.D",
annotation_col = annoMD, annotation_row = annoMD,
fontsize = 12, fontsize_row = 10, fontsize_col = 10, show_rownames = TRUE,
labels_row = as.character(rownames(cor.res$r)),
labels_col = as.character(colnames(cor.res$r)),
color = colorRampPalette(c("navy", "white", "red"))(50)
)
## Spearman correlation
cor.res <- rcorr(as.matrix(raw), type = "spearman")
corrplot(cor.res$r, method = "color", addCoef.col = "darkgrey",
title = paste("Unordered correlation plot", "Spearman", sep = ": "),
outline = TRUE, number.cex = 1.25,
tl.cex = 1.5, cl.cex = 1.25, mar=c(0,0,2,0))
corrplot(cor.res$r, method = "square", order = "hclust",
title = paste("Hierarchical clustered correlation plot", "Spearman", sep = ": "),
number.cex = 1.25, outline = TRUE,
tl.cex = 1.5, cl.cex = 1.25, mar=c(0,0,2,0))
pheatmap(cor.res$r,
main = paste("Clustered sample correlation heatmap", "Spearman", sep = ": "),
cluster_rows = TRUE, cluster_cols = TRUE, clustering_method = "ward.D",
annotation_col = annoMD, annotation_row = annoMD,
fontsize = 12, fontsize_row = 10, fontsize_col = 10, show_rownames = TRUE,
labels_row = as.character(rownames(cor.res$r)),
labels_col = as.character(colnames(cor.res$r)),
color = colorRampPalette(c("navy", "white", "red"))(50)
)
# Run correlation test and save output
cor.res <- rcorr(as.matrix(raw), type = type)
cor.res$r
cor.res$P
cor.res$n
# Annotated pheatmap
filename <- paste("annoCorrplot", paste(type, "png", sep = "."), sep = "_")
filename
# Unordered corrplot
filename <- paste(io$outDir, "sampleUnordered_corrplot.png", sep = "/")
filename
io$corType
io$corType <- "Pearson"
io$corType
# Set the correlation test type
type <- tolower(io$corType)
# Run correlation test and save output
cor.res <- rcorr(as.matrix(raw), type = type)
saveRDS(cor.res, file = paste(io$outDir, "corrResults.rds",sep= "/"))
filename <- paste(type, "corrResults.rds", sep = "_")
filename
saveRDS(cor.res, file = paste(io$outDir, filename, sep= "/"))
# Unordered corrplot
filename <- paste(io$outDir, "sampleUnordered_corrplot.png", sep = "/")
filename
png(filename = filename, 1000, 1000)
corrplot(cor.res$r, method = "color", addCoef.col = "darkgrey",
title = paste("Unordered correlation plot of samples", io$corType, sep = ": "),
outline = TRUE, number.cex = 1.25,
tl.cex = 1.5, cl.cex = 1.25, mar=c(0,0,2,0))
dev.off()
# Clustered corrplot
filename <- paste(io$outDir, "sampleHclust_corrplot.png", sep = "/")
filename
# Clustered corrplot
filename <- paste(type, "sampleHclust_corrplot.png", sep = "/")
filename
# Clustered corrplot
filename <- paste(type, "sampleHclust", "corrplot.png", sep = "_")
filename
paste(io$outDir, filename, sep = "/")
png(filename = paste(io$outDir, filename, sep = "/"), 1000, 1000)
corrplot(cor.res$r, method = "square", order = "hclust",
title = paste("Hierarchical clustering correlation plot of samples", io$corType, sep = ": "),
number.cex = 1.25, outline = TRUE,
tl.cex = 1.5, cl.cex = 1.25, mar=c(0,0,2,0))
dev.off()
# Unordered corrplot
filename <- paste(type, "sampleUnordered", "corrplot.png", sep = "_")
filename
paste(io$outDir, filename, sep = "/")
filename <- paste(type, "sampleUnordered", "corrplot.png", sep = "_")
png(filename = paste(io$outDir, filename, sep = "/"), 1000, 1000)
corrplot(cor.res$r, method = "color", addCoef.col = "darkgrey",
title = paste("Unordered correlation plot of samples", io$corType, sep = ": "),
outline = TRUE, number.cex = 1.25,
tl.cex = 1.5, cl.cex = 1.25, mar=c(0,0,2,0))
dev.off()
filename <- paste(type, "sampleHclust", "corrplot.png", sep = "_")
png(filename = paste(io$outDir, filename, sep = "/"), 1000, 1000)
corrplot(cor.res$r, method = "square", order = "hclust",
title = paste("Hierarchical clustering correlation plot of samples", io$corType, sep = ": "),
number.cex = 1.25, outline = TRUE,
tl.cex = 1.5, cl.cex = 1.25, mar=c(0,0,2,0))
dev.off()
# Annotated pheatmap
filename <- paste(type, "annoCorrplot.pnt", sep = "_")
filename
paste(io$outDir, filename, sep = "/")
filename <- paste(type, "annoCorrplot.png", sep = "_")
#filename <- paste("annoCorrplot", paste(type, "png", sep = "."), sep = "_")
png(filename = paste(io$outDir, filename, sep = "/"), 1000, 1000)
pheatmap(cor.res$r,
main = paste("Clustered sample correlation heatmap", io$corType, sep = ": "),
cluster_rows = TRUE, cluster_cols = TRUE, clustering_method = "ward.D",
annotation_col = annoMD, annotation_row = annoMD,
fontsize = 12, fontsize_row = 10, fontsize_col = 10, show_rownames = TRUE,
labels_row = as.character(rownames(cor.res$r)),
labels_col = as.character(colnames(cor.res$r)),
color = colorRampPalette(c("navy", "white", "red"))(50)
)
dev.off()
pheatmap(cor.res$r,
main = paste("Clustered sample correlation heatmap", io$corType, sep = ": "),
cluster_rows = TRUE, cluster_cols = TRUE, clustering_method = "ward.D",
annotation_col = annoMD, annotation_row = annoMD,
fontsize = 12, fontsize_row = 10, fontsize_col = 10, show_rownames = TRUE,
labels_row = as.character(rownames(cor.res$r)),
labels_col = as.character(colnames(cor.res$r)),
color = colorRampPalette(c("navy", "white", "red"))(50)
)
pheatmap(cor.res$r,
main = paste("Clustered sample correlation heatmap", io$corType, sep = ": "),
cluster_rows = TRUE, cluster_cols = TRUE, clustering_method = "ward.D",
annotation_col = annoMD, annotation_row = annoMD,
fontsize = 12, fontsize_row = 10, fontsize_col = 10, show_rownames = TRUE,
labels_row = as.character(rownames(cor.res$r)),
labels_col = as.character(colnames(cor.res$r)),
color = colorRampPalette(c("navy", "white", "red"))(50)
)
plot <- pheatmap(cor.res$r,
main = paste("Clustered sample correlation heatmap", io$corType, sep = ": "),
cluster_rows = TRUE, cluster_cols = TRUE, clustering_method = "ward.D",
annotation_col = annoMD, annotation_row = annoMD,
fontsize = 12, fontsize_row = 10, fontsize_col = 10, show_rownames = TRUE,
labels_row = as.character(rownames(cor.res$r)),
labels_col = as.character(colnames(cor.res$r)),
color = colorRampPalette(c("navy", "white", "red"))(50)
)
plot
plot
save_pheatmap_pdf <- function(x, filename) {
stopifnot(!missing(x))
stopifnot(!missing(filename))
png(filename)
grid::grid.newpage()
grid::grid.draw(x$gtable)
dev.off()
}
str(save_pheatmap_pdf)
### Sample-sample correlations
# Function to save pheatmap
save_pheatmap_png <- function(x, filename) {
stopifnot(!missing(x))
stopifnot(!missing(filename))
png(filename)
grid::grid.newpage()
grid::grid.draw(x$gtable)
dev.off()
}
plot <- pheatmap(cor.res$r,
main = paste("Clustered sample correlation heatmap", io$corType, sep = ": "),
cluster_rows = TRUE, cluster_cols = TRUE, clustering_method = "ward.D",
annotation_col = annoMD, annotation_row = annoMD,
fontsize = 12, fontsize_row = 10, fontsize_col = 10, show_rownames = TRUE,
labels_row = as.character(rownames(cor.res$r)),
labels_col = as.character(colnames(cor.res$r)),
color = colorRampPalette(c("navy", "white", "red"))(50)
)
plot
# Annotated pheatmap
filename <- paste(type, "annoCorrplot.png", sep = "_")
filename
filename <- paste(type, "annoCorrplot.png", sep = "_")
plot <- pheatmap(cor.res$r,
main = paste("Clustered sample correlation heatmap", io$corType, sep = ": "),
cluster_rows = TRUE, cluster_cols = TRUE, clustering_method = "ward.D",
annotation_col = annoMD, annotation_row = annoMD,
fontsize = 12, fontsize_row = 10, fontsize_col = 10, show_rownames = TRUE,
labels_row = as.character(rownames(cor.res$r)),
labels_col = as.character(colnames(cor.res$r)),
color = colorRampPalette(c("navy", "white", "red"))(50)
)
save_pheatmap_png(plot, paste(io$outDir, filename, sep = "/"))
save_pheatmap_png <- function(x, filename) {
stopifnot(!missing(x))
stopifnot(!missing(filename))
png(filename, 1000, 1000)
grid::grid.newpage()
grid::grid.draw(x$gtable)
dev.off()
}
filename <- paste(type, "annoCorrplot.png", sep = "_")
plot <- pheatmap(cor.res$r,
main = paste("Clustered sample correlation heatmap", io$corType, sep = ": "),
cluster_rows = TRUE, cluster_cols = TRUE, clustering_method = "ward.D",
annotation_col = annoMD, annotation_row = annoMD,
fontsize = 12, fontsize_row = 10, fontsize_col = 10, show_rownames = TRUE,
labels_row = as.character(rownames(cor.res$r)),
labels_col = as.character(colnames(cor.res$r)),
color = colorRampPalette(c("navy", "white", "red"))(50)
)
save_pheatmap_png(plot, paste(io$outDir, filename, sep = "/"))
# Annotated pheatmap
filename <- paste(type, "annoCorrplot.png", sep = "_")
#png(filename = paste(io$outDir, "annoCorrplot_pearson.png", sep = "/"), 1000, 1000)
plot <- pheatmap(cor.res$r,
main = paste("Clustered sample correlation heatmap", "Pearson", sep = ": "),
cluster_rows = TRUE, cluster_cols = TRUE, clustering_method = "ward.D",
annotation_col = annoMD, annotation_row = annoMD,
fontsize = 12, fontsize_row = 10, fontsize_col = 10, show_rownames = TRUE,
labels_row = as.character(rownames(cor.res$r)),
labels_col = as.character(colnames(cor.res$r)),
color = colorRampPalette(c("navy", "white", "red"))(50)
)
save_pheatmap_png(plot, paste(io$outDir, filename, sep = "/"))
filename <- paste(type, "annoCorrplot.png", sep = "_")
#png(filename = paste(io$outDir, "annoCorrplot_pearson.png", sep = "/"), 1000, 1000)
plot <- pheatmap(cor.res$r,
main = paste("Clustered sample correlation heatmap", "Pearson", sep = ": "),
cluster_rows = TRUE, cluster_cols = TRUE, clustering_method = "ward.D",
annotation_col = annoMD, annotation_row = annoMD,
fontsize = 12, fontsize_row = 10, fontsize_col = 10, show_rownames = TRUE,
labels_row = as.character(rownames(cor.res$r)),
labels_col = as.character(colnames(cor.res$r)),
color = colorRampPalette(c("navy", "white", "red"))(50)
)
save_pheatmap_png(plot, paste(io$outDir, filename, sep = "/"))
io$corType <- "Spearman"
io$corType
## Run Spearman correlation
cor.res <- rcorr(as.matrix(raw), type = "spearman")
filename <- paste(type, "annoCorrplot.png", sep = "_")
#png(filename = paste(io$outDir, "annoCorrplot_spearman.png", sep = "/"), 1000, 1000)
plot <- pheatmap(cor.res$r,
main = paste("Clustered sample correlation heatmap", "Spearman", sep = ": "),
cluster_rows = TRUE, cluster_cols = TRUE, clustering_method = "ward.D",
annotation_col = annoMD, annotation_row = annoMD,
fontsize = 12, fontsize_row = 10, fontsize_col = 10, show_rownames = TRUE,
labels_row = as.character(rownames(cor.res$r)),
labels_col = as.character(colnames(cor.res$r)),
color = colorRampPalette(c("navy", "white", "red"))(50)
)
save_pheatmap_png(plot, paste(io$outDir, filename, sep = "/"))
## Run Pearson correlation
type <- "pearson"
cor.res <- rcorr(as.matrix(raw), type = type)
# Unordered corrplot
filename <- paste(type, "unorderedCorrplot.png", sep = "_")
filename
paste(io$outDir, filename, sep = "/")
filename <- paste(type, "pairwiseCorrplot.png", sep = "_")
filename
paste(io$outDir, filename, sep = "/")
# Unordered corrplot
filename <- paste(type, "unorderedCorrplot.png", sep = "_")
filename
paste(io$outDir, filename, sep = "/")
# Clustered corrplot
filename <- paste(type, "hclustCorrplot.png", sep = "_")
paste(io$outDir, filename, sep = "/")
filename <- paste(type, "pairwiseCorrplot.png", sep = "_")
paste(io$outDir, filename, sep = "/")
